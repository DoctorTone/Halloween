/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Shyam (https://sketchfab.com/chinchankarshyam3)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/ghost-cf913b6eea5f4642868d5e65614ea66b
Title: ghost
*/

import * as THREE from "three";
import type { JSX } from "react";
import { useGLTF, Float } from "@react-three/drei";
import type { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
    Object_6: THREE.Mesh;
  };
  materials: {
    Material: THREE.MeshStandardMaterial;
    ["Material.001"]: THREE.MeshPhysicalMaterial;
  };
};

export function Ghost(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "./models/ghost.glb"
  ) as unknown as GLTFResult;
  return (
    <Float>
      <group {...props} dispose={null}>
        <group rotation={[-Math.PI / 2, 0, 1.923]}>
          <group rotation={[Math.PI / 2, 0, 0]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_4.geometry}
              position={[0, 5.818, 0]}
              scale={1.438}
            >
              <meshStandardMaterial
                color="#ffffff"
                transparent
                opacity={0.5}
                emissive="#99aaff"
                emissiveIntensity={0}
              />
            </mesh>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_6.geometry}
              material={materials["Material.001"]}
              position={[0, 5.818, 0]}
              scale={1.438}
            />
          </group>
        </group>
      </group>
    </Float>
  );
}

useGLTF.preload("./models/ghost.glb");
